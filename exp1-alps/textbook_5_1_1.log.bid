Bidirectional search is enabled
Maximum #rules for each IDB will be 1
Maximum #rules for programs will be 4
Using Templates: ./data/templates/textbook_5_1_1.tp
Number of templates: 0
filter-1 is enabled
augmentation distance: 4
chain2 is enabled

Relation *Junior

Relation *focus

Relation *Class

Relation *Enroll

Relation *Faculty

Relation *Student

Relation invent_F

Relation invent_C

Relation invent_K

Relation output

**Loading input is done: 10 ms.

Relation: output(S_name)
Stats of given templates: 
=== distance stats ===
Number of Templates: 0
Number of chain-1 like templates: 0
Number of chain-2 like templates: 0
Number of chain-3 like templates: 0


Relation: invent_F(F_key)
Stats of given templates: 
=== distance stats ===
Number of Templates: 0
Number of chain-1 like templates: 0
Number of chain-2 like templates: 0
Number of chain-3 like templates: 0


Relation: invent_C(C_name)
Stats of given templates: 
=== distance stats ===
Number of Templates: 0
Number of chain-1 like templates: 0
Number of chain-2 like templates: 0
Number of chain-3 like templates: 0


Relation: invent_K(S_key)
Stats of given templates: 
=== distance stats ===
Number of Templates: 0
Number of chain-1 like templates: 0
Number of chain-2 like templates: 0
Number of chain-3 like templates: 0


Relation: output(S_name)

before explore chain-2: candidates size: 0

after explore chain-2: candidates size: 10

before add filtering: candidates size: 10
try to extend with a filter for template: P0(v2) :- P1(v0),P2(v1,v2,v0).
add filter template: P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v1).
add filter template: P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v2).
try to extend with a filter for template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
add filter template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
add filter template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v0).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
try to extend with a filter for template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v0).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
try to extend with a filter for template: P0(v1) :- P1(v0,v1,v2),P2(v3,v1,v4).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v0).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v1).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).
try to extend with a filter for template: P0(v1) :- P1(v0,v1,v2),P2(v3,v4,v2).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v2).
try to extend with a filter for template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2).
add filter template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
add filter template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).
add filter template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v2).
try to extend with a filter for template: P0(v1) :- P1(v0,v1,v2),P2(v1).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v1),P3(v0).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v1),P3(v2).
try to extend with a filter for template: P0(v1) :- P1(v0,v1,v2),P2(v0).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v0),P3(v1).
add filter template: P0(v1) :- P1(v0,v1,v2),P2(v0),P3(v2).
after add filtering: candidates size: 33

before filtering by augmentation: candidates size: 33
P0(v0,v3) :- P1(v0,v1),P2(v1,v2),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P1(v0,v1),P3(v2,v3),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P1(v0,v1),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P3(v2,v3),P1(v0,v1).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P1(v0,v1),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P2(v1,v2),P1(v0,v1).
dis1: 5, dis2: 5
will remove: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).
P0(v0,v3) :- P1(v0,v1),P2(v1,v2),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P1(v0,v1),P3(v2,v3),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P1(v0,v1),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P3(v2,v3),P1(v0,v1).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P1(v0,v1),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P2(v1,v2),P1(v0,v1).
dis1: 5, dis2: 5
will remove: P0(v1) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v1).
P0(v0,v3) :- P1(v0,v1),P2(v1,v2),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P1(v0,v1),P3(v2,v3),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P1(v0,v1),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P3(v2,v3),P1(v0,v1).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P1(v0,v1),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P2(v1,v2),P1(v0,v1).
dis1: 5, dis2: 5
will remove: P0(v1) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).

after filtering: candidates size: 30
before deduplication, candidates size: 30
after deduplication, candidates size: 17
100 examples of candidates: 
P0(v2) :- P1(v0),P2(v1,v2,v0).
P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4).
P0(v1) :- P1(v0,v1,v2),P2(v1).
P0(v1) :- P1(v0,v1,v2),P2(v0).
P0(v0) :- P1(v0),P2(v0).
P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v1).
P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v2).
P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v0).
P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).
P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).
P0(v1) :- P1(v0,v1,v2),P2(v1),P3(v0).

>> Template: P0(v2) :- P1(v0),P2(v1,v2,v0).,  matches: 1
>> Template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).,  matches: 1
skip useless rule: output(x1:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4).
skip useless rule: output(x1:S_name) :- Student(x0:S_key,x1:S_name,x2:level),output(x1:S_name),  from template: P0(v1) :- P1(v0,v1,v2),P2(v1).
>> Template: P0(v1) :- P1(v0,v1,v2),P2(v0).,  matches: 1
skip useless rule: output(x0:S_name) :- output(x0:S_name),output(x0:S_name),  from template: P0(v0) :- P1(v0),P2(v0).
>> Template: P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v1).,  matches: 1
skip useless rule: output(x2:S_name) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),output(x2:S_name),  from template: P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v2).
>> Template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).,  matches: 1
>> Template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).,  matches: 1
skip useless rule: output(x1:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v0).
skip useless rule: output(x1:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v1) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
>> Template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).,  matches: 1
>> Template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).,  matches: 1
>> Template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).,  matches: 1
>> Template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).,  matches: 1
skip useless rule: output(x1:S_name) :- Student(x0:S_key,x1:S_name,x2:level),invent_K(x0:S_key),output(x1:S_name),  from template: P0(v1) :- P1(v0,v1,v2),P2(v1),P3(v0).
before deduplicate rules, matching size: 10
after deduplicate rules, matching size: 10

number of instantiated rules: 10
all matchings : 
0, output(x2:S_name) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),
1, output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),
2, output(x1:S_name) :- Student(x0:S_key,x1:S_name,x2:level),invent_K(x0:S_key),
3, output(x2:S_name) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),invent_K(x1:S_key),
4, output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_K(x0:S_key),
5, output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),
6, output(x3:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),output(x1:S_name),
7, output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),
8, output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),
9, output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),
normalizing PO..
overall templates: 10
most general: 5
most specific: 5
independent: 2
Relation: invent_F(F_key)

before explore chain-2: candidates size: 0

after explore chain-2: candidates size: 13

before add filtering: candidates size: 13
try to extend with a filter for template: P0(v1) :- P1(v0),P2(v1,v0).
add filter template: P0(v1) :- P1(v0),P2(v1,v0),P3(v1).
try to extend with a filter for template: P0(v2) :- P1(v0,v1),P2(v1,v2).
add filter template: P0(v2) :- P1(v0,v1),P2(v1,v2),P3(v0).
add filter template: P0(v2) :- P1(v0,v1),P2(v1,v2),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v0,v2).
add filter template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v1).
try to extend with a filter for template: P0(v2) :- P1(v0,v1),P2(v0,v2).
add filter template: P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v0).
add filter template: P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v1) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v1,v2).
add filter template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v1).
add filter template: P0(v1) :- P1(v0,v1),P2(v1),P3(v0).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v0),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v0,v2).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v0) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v2) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v0),P3(v1).
after add filtering: candidates size: 33

before filtering by augmentation: candidates size: 33

after filtering: candidates size: 33
before deduplication, candidates size: 33
after deduplication, candidates size: 21
100 examples of candidates: 
P0(v1) :- P1(v0),P2(v1,v0).
P0(v2) :- P1(v0,v1),P2(v1,v2).
P0(v1) :- P1(v0,v1),P2(v0,v2).
P0(v1) :- P1(v0,v1),P2(v1,v2).
P0(v1) :- P1(v0,v1),P2(v1).
P0(v1) :- P1(v0,v1),P2(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2).
P0(v0) :- P1(v0,v1),P2(v0).
P0(v0) :- P1(v0),P2(v0).
P0(v1) :- P1(v0),P2(v1,v0),P3(v1).
P0(v2) :- P1(v0,v1),P2(v1,v2),P3(v0).
P0(v2) :- P1(v0,v1),P2(v1,v2),P3(v1).
P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v0).
P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v1).
P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v1).
P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v0).
P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v1).
P0(v1) :- P1(v0,v1),P2(v1),P3(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).

>> Template: P0(v1) :- P1(v0),P2(v1,v0).,  matches: 1
>> Template: P0(v2) :- P1(v0,v1),P2(v1,v2).,  matches: 1
skip useless rule: invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Class(x0:C_name,x2:F_key),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2).
>> Template: P0(v1) :- P1(v0,v1),P2(v1,v2).,  matches: 1
skip useless rule: invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v1) :- P1(v0,v1),P2(v1).
>> Template: P0(v1) :- P1(v0,v1),P2(v0).,  matches: 1
skip useless rule: invent_F(x0:F_key) :- Faculty(x0:F_key,x1:F_name),Faculty(x0:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2).
skip useless rule: invent_F(x0:F_key) :- Faculty(x0:F_key,x1:F_name),invent_F(x0:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v0).
skip useless rule: invent_F(x0:F_key) :- invent_F(x0:F_key),invent_F(x0:F_key),  from template: P0(v0) :- P1(v0),P2(v0).
skip useless rule: invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),invent_F(x1:F_key),  from template: P0(v1) :- P1(v0),P2(v1,v0),P3(v1).
>> Template: P0(v2) :- P1(v0,v1),P2(v1,v2),P3(v0).,  matches: 1
>> Template: P0(v2) :- P1(v0,v1),P2(v1,v2),P3(v1).,  matches: 1
skip useless rule: invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Class(x0:C_name,x2:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v0).
skip useless rule: invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Class(x0:C_name,x2:F_key),invent_F(x1:F_key),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v1).
>> Template: P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v1).,  matches: 1
>> Template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v0).,  matches: 1
skip useless rule: invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v1).
skip useless rule: invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),invent_F(x1:F_key),  from template: P0(v1) :- P1(v0,v1),P2(v1),P3(v0).
skip useless rule: invent_F(x0:F_key) :- Faculty(x0:F_key,x1:F_name),Faculty(x0:F_key,x2:F_name),invent_F(x0:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
skip useless rule: invent_F(x0:F_key) :- Faculty(x0:F_key,x1:F_name),Faculty(x0:F_key,x2:F_name),focus(x1:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
>> Template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).,  matches: 1
before deduplicate rules, matching size: 9
after deduplicate rules, matching size: 9

number of instantiated rules: 9
all matchings : 
0, invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),
1, invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),
2, invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),
3, invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),
4, invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),
5, invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),
6, invent_F(x2:F_key) :- Class(x0:C_name,x1:F_key),Class(x0:C_name,x2:F_key),invent_F(x1:F_key),
7, invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_C(x0:C_name),
8, invent_F(x2:F_key) :- Faculty(x0:F_key,x1:F_name),Faculty(x2:F_key,x1:F_name),invent_F(x0:F_key),
normalizing PO..
overall templates: 9
most general: 6
most specific: 6
independent: 3
Relation: invent_C(C_name)

before explore chain-2: candidates size: 0

after explore chain-2: candidates size: 14

before add filtering: candidates size: 14
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v0,v2).
add filter template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v1).
try to extend with a filter for template: P0(v2) :- P1(v0,v1),P2(v0,v2).
add filter template: P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v0).
add filter template: P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v1) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v1,v2).
add filter template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
add filter template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v1).
add filter template: P0(v1) :- P1(v0,v1),P2(v1),P3(v0).
try to extend with a filter for template: P0(v1) :- P1(v0,v1),P2(v0).
add filter template: P0(v1) :- P1(v0,v1),P2(v0),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v0,v2).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v0) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v2) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v1,v2).
add filter template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v1).
add filter template: P0(v0) :- P1(v0,v1),P2(v1),P3(v0).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v0),P3(v1).
after add filtering: candidates size: 36

before filtering by augmentation: candidates size: 36

after filtering: candidates size: 36
before deduplication, candidates size: 36
after deduplication, candidates size: 24
100 examples of candidates: 
P0(v1) :- P1(v0,v1),P2(v0,v2).
P0(v1) :- P1(v0,v1),P2(v1,v2).
P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
P0(v1) :- P1(v0,v1),P2(v1).
P0(v1) :- P1(v0,v1),P2(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2).
P0(v0) :- P1(v0,v1),P2(v1,v2).
P0(v0) :- P1(v0,v1),P2(v1).
P0(v0) :- P1(v0,v1),P2(v0).
P0(v0) :- P1(v0),P2(v0).
P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v0).
P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v1).
P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v1).
P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v0).
P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v1).
P0(v1) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
P0(v1) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
P0(v1) :- P1(v0,v1),P2(v1),P3(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).
P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v0).
P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
P0(v0) :- P1(v0,v1),P2(v1),P3(v0).

skip useless rule: invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Enroll(x0:S_key,x2:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2).
>> Template: P0(v1) :- P1(v0,v1),P2(v1,v2).,  matches: 1
>> Template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).,  matches: 1
skip useless rule: invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1).
>> Template: P0(v1) :- P1(v0,v1),P2(v0).,  matches: 1
skip useless rule: invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Class(x0:C_name,x2:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2).
>> Template: P0(v0) :- P1(v0,v1),P2(v1,v2).,  matches: 1
>> Template: P0(v0) :- P1(v0,v1),P2(v1).,  matches: 1
skip useless rule: invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v0).
skip useless rule: invent_C(x0:C_name) :- invent_C(x0:C_name),invent_C(x0:C_name),  from template: P0(v0) :- P1(v0),P2(v0).
skip useless rule: invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Enroll(x0:S_key,x2:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v0).
skip useless rule: invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Enroll(x0:S_key,x2:C_name),invent_C(x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2),P3(v1).
>> Template: P0(v2) :- P1(v0,v1),P2(v0,v2),P3(v1).,  matches: 1
>> Template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v0).,  matches: 1
skip useless rule: invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2),P3(v1).
>> Template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).,  matches: 1
skip useless rule: invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
skip useless rule: invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v1),P3(v0).
skip useless rule: invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Class(x0:C_name,x2:F_key),invent_C(x0:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
skip useless rule: invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Class(x0:C_name,x2:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
>> Template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).,  matches: 1
skip useless rule: invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_C(x0:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v0).
>> Template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).,  matches: 1
skip useless rule: invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1),P3(v0).
before deduplicate rules, matching size: 10
after deduplicate rules, matching size: 10

number of instantiated rules: 10
all matchings : 
0, invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),
1, invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),
2, invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),
3, invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),
4, invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),
5, invent_C(x2:C_name) :- Enroll(x0:S_key,x1:C_name),Enroll(x0:S_key,x2:C_name),invent_C(x1:C_name),
6, invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),
7, invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_K(x0:S_key),
8, invent_C(x2:C_name) :- Class(x0:C_name,x1:F_key),Class(x2:C_name,x1:F_key),invent_C(x0:C_name),
9, invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),
normalizing PO..
overall templates: 10
most general: 7
most specific: 5
independent: 2
Relation: invent_K(S_key)

before explore chain-2: candidates size: 0

after explore chain-2: candidates size: 16

before add filtering: candidates size: 16
try to extend with a filter for template: P0(v1) :- P1(v0),P2(v1,v2,v0).
add filter template: P0(v1) :- P1(v0),P2(v1,v2,v0),P3(v1).
add filter template: P0(v1) :- P1(v0),P2(v1,v2,v0),P3(v2).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v0,v2).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v0) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v2) :- P1(v0,v1),P2(v2,v1).
add filter template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).
add filter template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v1,v2).
add filter template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v1).
add filter template: P0(v0) :- P1(v0,v1),P2(v1),P3(v0).
try to extend with a filter for template: P0(v0) :- P1(v0,v1),P2(v0).
add filter template: P0(v0) :- P1(v0,v1),P2(v0),P3(v1).
try to extend with a filter for template: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v0).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
try to extend with a filter for template: P0(v0) :- P1(v0,v1,v2),P2(v3,v1,v4).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v0).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v1).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).
try to extend with a filter for template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v0).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v1).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).
try to extend with a filter for template: P0(v0) :- P1(v0,v1,v2),P2(v3,v4,v2).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v2).
try to extend with a filter for template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).
add filter template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v2).
try to extend with a filter for template: P0(v0) :- P1(v0,v1,v2),P2(v1).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v1),P3(v0).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v1),P3(v2).
try to extend with a filter for template: P0(v0) :- P1(v0,v1,v2),P2(v0).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v0),P3(v1).
add filter template: P0(v0) :- P1(v0,v1,v2),P2(v0),P3(v2).
after add filtering: candidates size: 49

before filtering by augmentation: candidates size: 49
P0(v0,v3) :- P1(v0,v1),P2(v1,v2),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P1(v0,v1),P3(v2,v3),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P1(v0,v1),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P3(v2,v3),P1(v0,v1).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P1(v0,v1),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P2(v1,v2),P1(v0,v1).
dis1: 5, dis2: 5
will remove: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v0).
P0(v0,v3) :- P1(v0,v1),P2(v1,v2),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P1(v0,v1),P3(v2,v3),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P1(v0,v1),P3(v2,v3).
dis1: 5, dis2: 5
P0(v0,v3) :- P2(v1,v2),P3(v2,v3),P1(v0,v1).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P1(v0,v1),P2(v1,v2).
dis1: 5, dis2: 5
P0(v0,v3) :- P3(v2,v3),P2(v1,v2),P1(v0,v1).
dis1: 5, dis2: 5
will remove: P0(v0) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).

after filtering: candidates size: 47
before deduplication, candidates size: 47
after deduplication, candidates size: 28
100 examples of candidates: 
P0(v1) :- P1(v0),P2(v1,v2,v0).
P0(v0) :- P1(v0,v1),P2(v0,v2).
P0(v0) :- P1(v0,v1),P2(v1,v2).
P0(v0) :- P1(v0,v1),P2(v0,v2,v3).
P0(v0) :- P1(v0,v1),P2(v1).
P0(v0) :- P1(v0,v1),P2(v0).
P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4).
P0(v0) :- P1(v0,v1,v2),P2(v1).
P0(v0) :- P1(v0,v1,v2),P2(v0).
P0(v0) :- P1(v0),P2(v0).
P0(v1) :- P1(v0),P2(v1,v2,v0),P3(v1).
P0(v1) :- P1(v0),P2(v1,v2,v0),P3(v2).
P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).
P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v0).
P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
P0(v0) :- P1(v0,v1),P2(v1),P3(v0).
P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).
P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
P0(v0) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v0).
P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v0).
P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).
P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).
P0(v0) :- P1(v0,v1,v2),P2(v1),P3(v0).

>> Template: P0(v1) :- P1(v0),P2(v1,v2,v0).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Enroll(x0:S_key,x2:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2).
>> Template: P0(v0) :- P1(v0,v1),P2(v1,v2).,  matches: 1
>> Template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).,  matches: 1
>> Template: P0(v0) :- P1(v0,v1),P2(v1).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0,v1),P2(v0).
skip useless rule: invent_K(x0:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4).
>> Template: P0(v0) :- P1(v0,v1,v2),P2(v1).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Student(x0:S_key,x1:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0,v1,v2),P2(v0).
skip useless rule: invent_K(x0:S_key) :- invent_K(x0:S_key),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0),P2(v0).
skip useless rule: invent_K(x1:S_key) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),invent_K(x1:S_key),  from template: P0(v1) :- P1(v0),P2(v1,v2,v0),P3(v1).
>> Template: P0(v1) :- P1(v0),P2(v1,v2,v0),P3(v2).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Enroll(x0:S_key,x2:C_name),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v0).
skip useless rule: invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Enroll(x0:S_key,x2:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2),P3(v1).
>> Template: P0(v2) :- P1(v0,v1),P2(v2,v1),P3(v0).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v0).
>> Template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
>> Template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0,v1),P2(v1),P3(v0).
skip useless rule: invent_K(x0:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),output(x1:S_name),  from template: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v1).
skip useless rule: invent_K(x0:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v0) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
skip useless rule: invent_K(x0:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),invent_K(x0:S_key),  from template: P0(v0) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v0).
>> Template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v0).,  matches: 1
>> Template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).,  matches: 1
>> Template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).,  matches: 1
>> Template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).,  matches: 1
skip useless rule: invent_K(x0:S_key) :- Student(x0:S_key,x1:S_name,x2:level),invent_K(x0:S_key),output(x1:S_name),  from template: P0(v0) :- P1(v0,v1,v2),P2(v1),P3(v0).
before deduplicate rules, matching size: 13
after deduplicate rules, matching size: 13

number of instantiated rules: 13
all matchings : 
0, invent_K(x1:S_key) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),
1, invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),
2, invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),
3, invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),
4, invent_K(x0:S_key) :- Student(x0:S_key,x1:S_name,x2:level),output(x1:S_name),
5, invent_K(x1:S_key) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),output(x2:S_name),
6, invent_K(x2:S_key) :- Enroll(x0:S_key,x1:C_name),Enroll(x2:S_key,x1:C_name),invent_K(x0:S_key),
7, invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),
8, invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),
9, invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),invent_K(x0:S_key),
10, invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),
11, invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),
12, invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),
normalizing PO..
overall templates: 13
most general: 8
most specific: 6
independent: 3

**exploreCandidateRules is done: 187 ms.

query_space for output: 8
true_label for output: 2
query_space for invent_F: 4
true_label for invent_F: 0
query_space for invent_C: 5
true_label for invent_C: 0
query_space for invent_K: 8
true_label for invent_K: 0
overall_query_space: 25
overall_true_label: 2
over estimated configs : 1
extractRules, tmpls.size = 5, res.size=5

#elements: 5 K = 1, res.size: 5
extractRules, tmpls.size = 6, res.size=6

#elements: 6 K = 1, res.size: 6
extractRules, tmpls.size = 7, res.size=7

#elements: 7 K = 1, res.size: 7
extractRules, tmpls.size = 8, res.size=8

#elements: 8 K = 1, res.size: 8
Config: {1 output(S_name), 1 invent_F(F_key), 1 invent_C(C_name), 1 invent_K(S_key), },  number of programs: 1680
(Time_Measure) init_helper_efficient takes 80 ms, longest_run: 18 max_threads: 1680
Gs.size = 254
over estimated configs : 1
extractRules, tmpls.size = 5, res.size=5

#elements: 5 K = 1, res.size: 5
extractRules, tmpls.size = 6, res.size=6

#elements: 6 K = 1, res.size: 6
extractRules, tmpls.size = 5, res.size=5

#elements: 5 K = 1, res.size: 5
extractRules, tmpls.size = 6, res.size=6

#elements: 6 K = 1, res.size: 6
Config: {1 output(S_name), 1 invent_F(F_key), 1 invent_C(C_name), 1 invent_K(S_key), },  number of programs: 900
(Time_Measure) init_helper_efficient takes 53 ms, longest_run: 0 max_threads: 900
Ss.size = 7
(Time_Measure) execute_one_round_helper takes 852 ms, longest_run: 18 max_threads: 254
(Time_Measure) execute_one_round_helper takes 36 ms, longest_run: 12 max_threads: 7
total_votes: 261

tuple stats: 
Gs: 78 80 83 85 88 90 103 105 108 110 113 115 118 120 133 135 138 140 143 145 148 150 163 165 168 170 173 175 178 180 193 195 198 200 203 205 208 210 497 498 500 502 503 505 507 508 510 522 523 525 527 528 530 532 533 535 537 538 540 552 553 555 557 558 560 562 563 565 567 568 570 582 583 585 587 588 590 592 593 595 597 598 600 612 613 615 617 618 620 622 623 625 627 628 630 1127 1128 1130 1132 1133 1135 1137 1138 1140 1152 1153 1155 1157 1158 1160 1162 1163 1165 1167 1168 1170 1212 1213 1215 1217 1218 1220 1222 1223 1225 1227 1228 1230 1242 1243 1245 1247 1248 1250 1252 1253 1255 1257 1258 1260 1337 1338 1340 1342 1343 1345 1347 1348 1350 1362 1363 1365 1367 1368 1370 1372 1373 1375 1377 1378 1380 1392 1393 1395 1397 1398 1400 1402 1403 1405 1407 1408 1410 1422 1423 1425 1427 1428 1430 1432 1433 1435 1437 1438 1440 1452 1453 1455 1457 1458 1460 1462 1463 1465 1467 1468 1470 1547 1548 1550 1552 1553 1555 1557 1558 1560 1572 1573 1575 1577 1578 1580 1582 1583 1585 1587 1588 1590 1602 1603 1605 1607 1608 1610 1612 1613 1615 1617 1618 1620 1632 1633 1635 1637 1638 1640 1642 1643 1645 1647 1648 1650 1662 1663 1665 1667 1668 1670 1672 1673 1675 1677 1678 1680 
Ss: 2008 2009 2010 2158 2159 2160 2458 
best distance: 1073741824
different votes: 0
Round 1 execution takes 0 ms.
converged at round: 1
remaining general programs: 254


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),output(x1:S_name),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x3:S_key) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x1:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v3,v1,v4),P3(v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),invent_K(x0:S_key),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v1) :- P1(v0,v1),P2(v0,v2,v3).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),invent_C(x0:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x2:F_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v1,v2).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x4:S_name) :- Student(x0:S_key,x1:S_name,x2:level),Student(x3:S_key,x4:S_name,x2:level),invent_K(x0:S_key),  from template: P0(v4) :- P1(v0,v1,v2),P2(v3,v4,v2),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x3:S_name) :- Junior(x2:level),Student(x0:S_key,x1:S_name,x2:level),Student(x0:S_key,x3:S_name,x4:level),  from template: P0(v3) :- P1(v0,v1,v2),P2(v0,v3,v4),P3(v2).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x1:C_name) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v1) :- P1(v0,v1),P2(v1,v2).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2).
remaining specific programs: 7


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_K(x0:S_key),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).


output(x2:S_name) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),invent_K(x1:S_key),  from template: P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v1).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
invent_K(x0:S_key) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_K(x0:S_key),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v0).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).


output(x2:S_name) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),invent_K(x1:S_key),  from template: P0(v2) :- P1(v0),P2(v1,v2,v0),P3(v1).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
invent_K(x0:S_key) :- Class(x1:C_name,x2:F_key),Enroll(x0:S_key,x1:C_name),invent_C(x1:C_name),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).


output(x2:S_name) :- Enroll(x0:S_key,x1:C_name),Student(x0:S_key,x2:S_name,x3:level),invent_C(x1:C_name),  from template: P0(v2) :- P1(v0,v1),P2(v0,v2,v3),P3(v1).
invent_F(x1:F_key) :- Faculty(x1:F_key,x0:F_name),focus(x0:F_name),  from template: P0(v1) :- P1(v0),P2(v1,v0).
invent_C(x0:C_name) :- Class(x0:C_name,x1:F_key),Faculty(x1:F_key,x2:F_name),invent_F(x1:F_key),  from template: P0(v0) :- P1(v0,v1),P2(v1,v2),P3(v1).
invent_K(x1:S_key) :- Junior(x0:level),Student(x1:S_key,x2:S_name,x0:level),output(x2:S_name),  from template: P0(v1) :- P1(v0),P2(v1,v2,v0),P3(v2).
Refinement takes 50 ms.
End-to-End takes 1072 ms.

**ALPS_end_to_end takes 1259 ms.
